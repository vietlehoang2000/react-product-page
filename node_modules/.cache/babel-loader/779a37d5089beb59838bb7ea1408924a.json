{"ast":null,"code":"var _jsxFileName = \"/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/LocalStorageContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useContext, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocalStorageDataContext = /*#__PURE__*/React.createContext();\nconst UpdateLocalStorageDataContext = /*#__PURE__*/React.createContext();\nconst IncreaseBagQuantityContext = /*#__PURE__*/React.createContext();\nexport function UseLocalStorageData() {\n  _s();\n\n  return useContext(LocalStorageDataContext);\n}\n\n_s(UseLocalStorageData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c = UseLocalStorageData;\nexport function UpdateLocalStorageData() {\n  _s2();\n\n  return useContext(UpdateLocalStorageDataContext);\n}\n\n_s2(UpdateLocalStorageData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UpdateLocalStorageData;\nexport function IncreaseBagQuantity() {\n  _s3();\n\n  return useContext(IncreaseBagQuantityContext);\n}\n\n_s3(IncreaseBagQuantity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c3 = IncreaseBagQuantity;\nexport function LocalStorageDataProvider({\n  children\n}) {\n  _s4();\n\n  var data = JSON.parse(localStorage.getItem(\"data\") || \"[]\");\n  console.log(\"# of data: \" + data.length);\n  data.forEach(function (user, index) {\n    console.log(\"[\" + index + \"]: \" + user.id);\n  }); // Modifying\n\n  var user = {\n    id: Math.floor(Math.random() * 1000000)\n  };\n  users.push(user);\n  console.log(\"Added user #\" + user.id); // Saving\n\n  localStorage.setItem(\"users\", JSON.stringify(users));\n  var data = localStorage.getItem('data'); // if( typeof data !== \"string\"){\n  //   data = [{id:'1',category:'1'}];\n  // }\n\n  const [products, setProducts] = useState(data);\n\n  function increaseBagQuantity(id, category) {\n    console.log(id, category);\n    let refProducts = [...products];\n    console.log(refProducts);\n    let newProduct = {\n      id: id,\n      cater: \"category\"\n    };\n    console.log(newProduct);\n    refProducts.push(newProduct);\n    console.log(refProducts);\n    setProducts(refProducts);\n  }\n\n  function updateLocalStorageData(value) {\n    setProducts(data);\n  }\n\n  localStorage.setItem('data', products);\n  return /*#__PURE__*/_jsxDEV(LocalStorageDataContext.Provider, {\n    value: products,\n    children: /*#__PURE__*/_jsxDEV(UpdateLocalStorageDataContext.Provider, {\n      value: updateLocalStorageData,\n      children: /*#__PURE__*/_jsxDEV(IncreaseBagQuantityContext.Provider, {\n        value: increaseBagQuantity,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(LocalStorageDataProvider, \"B+vMiCmoPTe5pp4iZRnlog3F4hs=\");\n\n_c4 = LocalStorageDataProvider;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UseLocalStorageData\");\n$RefreshReg$(_c2, \"UpdateLocalStorageData\");\n$RefreshReg$(_c3, \"IncreaseBagQuantity\");\n$RefreshReg$(_c4, \"LocalStorageDataProvider\");","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/LocalStorageContext.js"],"names":["React","useContext","createContext","useState","LocalStorageDataContext","UpdateLocalStorageDataContext","IncreaseBagQuantityContext","UseLocalStorageData","UpdateLocalStorageData","IncreaseBagQuantity","LocalStorageDataProvider","children","data","JSON","parse","localStorage","getItem","console","log","length","forEach","user","index","id","Math","floor","random","users","push","setItem","stringify","products","setProducts","increaseBagQuantity","category","refProducts","newProduct","cater","updateLocalStorageData","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAEA,MAAMC,uBAAuB,gBAAGJ,KAAK,CAACE,aAAN,EAAhC;AAEA,MAAMG,6BAA6B,gBAAGL,KAAK,CAACE,aAAN,EAAtC;AAEA,MAAMI,0BAA0B,gBAAGN,KAAK,CAACE,aAAN,EAAnC;AAEA,OAAO,SAASK,mBAAT,GAA+B;AAAA;;AACpC,SAAON,UAAU,CAACG,uBAAD,CAAjB;AACD;;GAFeG,mB;;KAAAA,mB;AAIhB,OAAO,SAASC,sBAAT,GAAkC;AAAA;;AACvC,SAAOP,UAAU,CAACI,6BAAD,CAAjB;AACD;;IAFeG,sB;;MAAAA,sB;AAIhB,OAAO,SAASC,mBAAT,GAA8B;AAAA;;AACnC,SAAOR,UAAU,CAACK,0BAAD,CAAjB;AACD;;IAFeG,mB;;MAAAA,mB;AAIhB,OAAO,SAASC,wBAAT,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAAgD;AAAA;;AAErD,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAA3C,CAAX;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBN,IAAI,CAACO,MAAjC;AACAP,EAAAA,IAAI,CAACQ,OAAL,CAAa,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC/BL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMI,KAAN,GAAc,KAAd,GAAsBD,IAAI,CAACE,EAAvC;AACH,GAFD,EAJmD,CAQnD;;AACA,MAAIF,IAAI,GAAG;AACPE,IAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B;AADG,GAAX;AAGAC,EAAAA,KAAK,CAACC,IAAN,CAAWP,IAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBG,IAAI,CAACE,EAAlC,EAbmD,CAenD;;AACAR,EAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BhB,IAAI,CAACiB,SAAL,CAAeH,KAAf,CAA9B;AAIF,MAAIf,IAAI,GAAGG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CApBqD,CAwBrD;AACA;AACA;;AAEA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAACS,IAAD,CAAxC;;AAEA,WAASqB,mBAAT,CAA6BV,EAA7B,EAAgCW,QAAhC,EAA0C;AACxCjB,IAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ,EAAeW,QAAf;AACA,QAAIC,WAAW,GAAE,CAAC,GAAGJ,QAAJ,CAAjB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYiB,WAAZ;AACA,QAAIC,UAAU,GAAG;AAACb,MAAAA,EAAE,EAACA,EAAJ;AAAOc,MAAAA,KAAK,EAAC;AAAb,KAAjB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,UAAZ;AACAD,IAAAA,WAAW,CAACP,IAAZ,CAAiBQ,UAAjB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,WAAZ;AACAH,IAAAA,WAAW,CAACG,WAAD,CAAX;AACD;;AAED,WAASG,sBAAT,CAAgCC,KAAhC,EAAsC;AACpCP,IAAAA,WAAW,CAACpB,IAAD,CAAX;AACD;;AAEDG,EAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BE,QAA7B;AAEA,sBACE,QAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEA,QAAzC;AAAA,2BACE,QAAC,6BAAD,CAA+B,QAA/B;AAAwC,MAAA,KAAK,EAAEO,sBAA/C;AAAA,6BACE,QAAC,0BAAD,CAA4B,QAA5B;AAAqC,QAAA,KAAK,EAAEL,mBAA5C;AAAA,kBACCtB;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;IAxDeD,wB;;MAAAA,wB","sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\n\nconst LocalStorageDataContext = React.createContext();\n\nconst UpdateLocalStorageDataContext = React.createContext();\n\nconst IncreaseBagQuantityContext = React.createContext();\n\nexport function UseLocalStorageData() {\n  return useContext(LocalStorageDataContext);\n}\n\nexport function UpdateLocalStorageData() {\n  return useContext(UpdateLocalStorageDataContext);\n}\n\nexport function IncreaseBagQuantity(){\n  return useContext(IncreaseBagQuantityContext);\n}\n\nexport function LocalStorageDataProvider({ children }) {\n\n  var data = JSON.parse(localStorage.getItem(\"data\") || \"[]\");\n    console.log(\"# of data: \" + data.length);\n    data.forEach(function(user, index) {\n        console.log(\"[\" + index + \"]: \" + user.id);\n    });\n\n    // Modifying\n    var user = {\n        id: Math.floor(Math.random() * 1000000)\n    };\n    users.push(user);\n    console.log(\"Added user #\" + user.id);\n\n    // Saving\n    localStorage.setItem(\"users\", JSON.stringify(users));\n\n\n\n  var data = localStorage.getItem('data')\n\n\n\n  // if( typeof data !== \"string\"){\n  //   data = [{id:'1',category:'1'}];\n  // }\n\n  const [products, setProducts] = useState(data);\n  \n  function increaseBagQuantity(id,category) {\n    console.log(id,category)\n    let refProducts= [...products];\n    console.log(refProducts);\n    let newProduct = {id:id,cater:\"category\"}\n    console.log(newProduct)\n    refProducts.push(newProduct)\n    console.log(refProducts);\n    setProducts(refProducts);\n  }\n\n  function updateLocalStorageData(value){\n    setProducts(data);\n  }\n\n  localStorage.setItem('data', products);\n\n  return (\n    <LocalStorageDataContext.Provider value={products}>\n      <UpdateLocalStorageDataContext.Provider value={updateLocalStorageData}>\n        <IncreaseBagQuantityContext.Provider value={increaseBagQuantity}>\n        {children}\n        </IncreaseBagQuantityContext.Provider>\n      </UpdateLocalStorageDataContext.Provider>\n    </LocalStorageDataContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}