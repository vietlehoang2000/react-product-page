{"ast":null,"code":"var _jsxFileName = \"/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/bag/bag-items-list.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { UseLocalStorageData } from '../LocalStorageContext';\nimport Spinner from \"react-bootstrap/Spinner\";\nimport BagItems from \"./bag-item\";\nimport './css/bag.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"https://product-list-fake-rest-server.herokuapp.com\";\nexport default function BagItemsList({\n  setproductNavStatus,\n  setproductNavContent\n}) {\n  _s();\n\n  const [notebookProduct, setNotebookProduct] = useState([]);\n  const [desktopProduct, setdesktopProduct] = useState([]);\n  const [refSpinnerLoading, setRefSpinnerLoading] = useState(true);\n  const localStorageItems = UseLocalStorageData();\n  const [bagProducts, setBagProducts] = useState([]);\n  let formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n  useEffect(() => {\n    let noteBooksIdUrl = \"\";\n    let desktopIdUrl = \"\";\n    localStorageItems.map(function (item) {\n      if (item.categorry === \"Notebook\") {\n        noteBooksIdUrl += `?id` + item.id;\n      } else {\n        desktopIdUrl += `?id` + item.id;\n      }\n    }); // async function fetchCategory() {\n    //     const [noteBookResponse, desktopResponse] = await Promise.all([\n    //       fetch(\n    //         `${url}/Notebook?`\n    //       ),\n    //       fetch(\n    //         `${url}/Desktop?_sort=${sortCategory}&_order=${orderSort}&q=${searchKeyWord}&_page=${currentPage}&_limit=${ItemsPageLimit}`\n    //       ),\n    //     ]);\n    //     const noteBooks = await noteBookResponse.json();\n    //     const desktops = await desktopResponse.json();\n    //     setNotebookProduct(noteBooks);\n    //     setdesktopProduct(desktops);\n    //     return [noteBookResponse, desktopResponse];\n    //   }\n    //   fetchCategory()\n    //     .then(([noteBookResponse, desktopResponse]) => {\n    //         setRefSpinnerLoading(true);\n    //       setproductNavStatus(\"\");\n    //     })\n    //     .catch((error) => console.log(error));\n    //fail attemp\n    // const promise = new Promise(\n    // function(resolve,reject){\n    // localStorageItems.map( async function mapping(item,index){\n    //     const response = await fetch(`${url}/${item.category}?id=${item.id}`)\n    //     const data = await response.json();\n    //     refProducts.push(data[0]);\n    //     console.log(index)\n    //     if(refProducts.length-1===index)\n    //     resolve(refProducts)\n    // })\n    // })\n    // promise.then(function(refProducts){\n    //     console.log(refProducts);\n    //     setBagProducts(refProducts);\n    //     setRefSpinnerLoading(false);\n    //     setproductNavContent('Bag');\n    //     setproductNavStatus(\"light\");\n    // })\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bag-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Review your bag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Free delivery and free returns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: refSpinnerLoading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100vh\"\n          },\n          className: \"Mac-pro d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            className: \"text-center\",\n            style: {\n              color: \"#E0E2E4\"\n            },\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden text-center\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bag-item\",\n          children: /*#__PURE__*/_jsxDEV(BagItems, {\n            bagProducts: bagProducts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BagItemsList, \"Ix2V8KRKgo1C4031F3gDJ1GZycI=\");\n\n_c = BagItemsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BagItemsList\");","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/bag/bag-items-list.js"],"names":["useEffect","useState","UseLocalStorageData","Spinner","BagItems","url","BagItemsList","setproductNavStatus","setproductNavContent","notebookProduct","setNotebookProduct","desktopProduct","setdesktopProduct","refSpinnerLoading","setRefSpinnerLoading","localStorageItems","bagProducts","setBagProducts","formatter","Intl","NumberFormat","style","currency","noteBooksIdUrl","desktopIdUrl","map","item","categorry","id","height","color"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAAQC,mBAAR,QAAkC,wBAAlC;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,eAAP;;;AAEA,MAAMC,GAAG,GAAG,qDAAZ;AAEA,eAAe,SAASC,YAAT,CAAsB;AACjCC,EAAAA,mBADiC;AAEjCC,EAAAA;AAFiC,CAAtB,EAGX;AAAA;;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC,IAAD,CAA1D;AAEA,QAAMc,iBAAiB,GAAGb,mBAAmB,EAA7C;AAEA,QAAM,CAACc,WAAD,EAAaC,cAAb,IAA6BhB,QAAQ,CAAC,EAAD,CAA3C;AAGA,MAAIiB,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC3CC,IAAAA,KAAK,EAAE,UADoC;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAA/B,CAAhB;AAMAtB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIuB,cAAc,GAAC,EAAnB;AACA,QAAIC,YAAY,GAAC,EAAjB;AACAT,IAAAA,iBAAiB,CAACU,GAAlB,CAAsB,UAASC,IAAT,EAAc;AAChC,UAAGA,IAAI,CAACC,SAAL,KAAiB,UAApB,EAA+B;AAC3BJ,QAAAA,cAAc,IAAG,KAAD,GAAOG,IAAI,CAACE,EAA5B;AACH,OAFD,MAGI;AACAJ,QAAAA,YAAY,IAAI,KAAD,GAAOE,IAAI,CAACE,EAA3B;AACH;AACJ,KAPD,EAHU,CAeV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA7DQ,EA6DP,EA7DO,CAAT;AA+DA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBACCf,iBAAiB,KAAK,IAAtB,gBACD;AACE,UAAA,KAAK,EAAE;AAAEgB,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,SAAS,EAAC,0DAFZ;AAAA,iCAIE,QAAC,OAAD;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,SAAS,EAAC,QAHZ;AAIE,YAAA,IAAI,EAAC,QAJP;AAAA,mCAME;AAAM,cAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADC,gBAcE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACC,QAAC,QAAD;AAAU,YAAA,WAAW,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAfH,uBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BH;;GAjHuBV,Y;;KAAAA,Y","sourcesContent":["import { useEffect, useState } from \"react\"\n\nimport {UseLocalStorageData} from '../LocalStorageContext'\n\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport BagItems from \"./bag-item\";\n\nimport './css/bag.css'\n\nconst url = \"https://product-list-fake-rest-server.herokuapp.com\";\n\nexport default function BagItemsList({\n    setproductNavStatus,\n    setproductNavContent,\n  }){\n    \n    const [notebookProduct, setNotebookProduct] = useState([]);\n\n    const [desktopProduct, setdesktopProduct] = useState([]);\n\n    const [refSpinnerLoading, setRefSpinnerLoading] = useState(true);\n\n    const localStorageItems = UseLocalStorageData();\n\n    const [bagProducts,setBagProducts]=useState([]);\n   \n\n    let formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      });\n    \n\n    useEffect(()=>{\n        let noteBooksIdUrl=\"\";\n        let desktopIdUrl=\"\";\n        localStorageItems.map(function(item){\n            if(item.categorry===\"Notebook\"){\n                noteBooksIdUrl+=`?id`+ item.id;\n            }\n            else{\n                desktopIdUrl+= `?id`+ item.id;\n            }\n        })\n\n\n\n\n        // async function fetchCategory() {\n        //     const [noteBookResponse, desktopResponse] = await Promise.all([\n        //       fetch(\n        //         `${url}/Notebook?`\n        //       ),\n        //       fetch(\n        //         `${url}/Desktop?_sort=${sortCategory}&_order=${orderSort}&q=${searchKeyWord}&_page=${currentPage}&_limit=${ItemsPageLimit}`\n        //       ),\n        //     ]);\n      \n        //     const noteBooks = await noteBookResponse.json();\n        //     const desktops = await desktopResponse.json();\n      \n        //     setNotebookProduct(noteBooks);\n        //     setdesktopProduct(desktops);\n      \n        //     return [noteBookResponse, desktopResponse];\n        //   }\n        //   fetchCategory()\n        //     .then(([noteBookResponse, desktopResponse]) => {\n        //         setRefSpinnerLoading(true);\n        //       setproductNavStatus(\"\");\n        //     })\n        //     .catch((error) => console.log(error));\n\n\n\n        //fail attemp\n        // const promise = new Promise(\n        // function(resolve,reject){\n        // localStorageItems.map( async function mapping(item,index){\n        //     const response = await fetch(`${url}/${item.category}?id=${item.id}`)\n        //     const data = await response.json();\n        //     refProducts.push(data[0]);\n        //     console.log(index)\n        //     if(refProducts.length-1===index)\n        //     resolve(refProducts)\n        // })\n        // })\n        // promise.then(function(refProducts){\n        //     console.log(refProducts);\n        //     setBagProducts(refProducts);\n        //     setRefSpinnerLoading(false);\n        //     setproductNavContent('Bag');\n        //     setproductNavStatus(\"light\");\n        // })\n    },[])\n\n    return(\n    <div className=\"container\">\n    <div className=\"bag-list\">\n        <h1>Review your bag</h1>\n        <p>Free delivery and free returns</p>\n        <>\n        {refSpinnerLoading === true ? (\n        <div\n          style={{ height: \"100vh\" }}\n          className=\"Mac-pro d-flex justify-content-center align-items-center\"\n        >\n          <Spinner\n            className=\"text-center\"\n            style={{ color: \"#E0E2E4\" }}\n            animation=\"border\"\n            role=\"status\"\n          >\n            <span className=\"visually-hidden text-center\">Loading...</span>\n          </Spinner>\n        </div>\n        ):(<div className=\"bag-item\">\n            <BagItems bagProducts={bagProducts}></BagItems>\n        </div>)\n        }\n         </>\n    </div>\n    </div>)\n    \n}"]},"metadata":{},"sourceType":"module"}