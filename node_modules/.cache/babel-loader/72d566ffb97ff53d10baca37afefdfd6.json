{"ast":null,"code":"import { createSlice, applyMiddleware } from '@reduxjs/toolkit';\nimport ReduxThunk from 'redux-thunk';\nconst initialState = {\n  userName: '',\n  passWord: '',\n  logInStatus: false\n};\nexport const authenticateSlide = createSlice({\n  name: 'authentication',\n  initialState,\n  reducers: {\n    getAccount: (state, action) => {\n      if (action.payload[0] !== '' && action.payload[1] !== '') {\n        state.userName = action.payload[0];\n        state.passWord = action.payload[1];\n      } else {\n        console.log('wrong');\n      }\n\n      console.log(state.userName, state.passWord);\n    },\n    checkAccount: (state, action) => {\n      if (action.payload[0] === state.userName && action.payload[1] === state.passWord) {\n        state.logInStatus = true;\n      }\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  getAccount,\n  checkAccount\n} = authenticateSlide.actions;\nexport default authenticateSlide.reducer;","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/authentication/authenticateSlide.js"],"names":["createSlice","applyMiddleware","ReduxThunk","initialState","userName","passWord","logInStatus","authenticateSlide","name","reducers","getAccount","state","action","payload","console","log","checkAccount","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,kBAA7C;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AAGA,MAAMC,YAAY,GAAC;AACfC,EAAAA,QAAQ,EAAC,EADM;AAEfC,EAAAA,QAAQ,EAAC,EAFM;AAGfC,EAAAA,WAAW,EAAC;AAHG,CAAnB;AAMA,OAAO,MAAMC,iBAAiB,GAAGP,WAAW,CAAC;AACzCQ,EAAAA,IAAI,EAAE,gBADmC;AAEzCL,EAAAA,YAFyC;AAGzCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,UAAGA,MAAM,CAACC,OAAP,CAAe,CAAf,MAAoB,EAApB,IAAwBD,MAAM,CAACC,OAAP,CAAe,CAAf,MAAoB,EAA/C,EAAkD;AAClDF,QAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAe,CAAf,CAAjB;AACAF,QAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAe,CAAf,CAAjB;AACC,OAHD,MAII;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACP,QAAlB,EAA2BO,KAAK,CAACN,QAAjC;AACD,KAVO;AAWRW,IAAAA,YAAY,EAAE,CAACL,KAAD,EAAOC,MAAP,KAAkB;AAC9B,UAAGA,MAAM,CAACC,OAAP,CAAe,CAAf,MAAoBF,KAAK,CAACP,QAA1B,IAAoCQ,MAAM,CAACC,OAAP,CAAe,CAAf,MAAoBF,KAAK,CAACN,QAAjE,EAA0E;AACtEM,QAAAA,KAAK,CAACL,WAAN,GAAkB,IAAlB;AACH;AACF;AAfO;AAH+B,CAAD,CAArC,C,CAsBL;;AACA,OAAO,MAAM;AAAEI,EAAAA,UAAF;AAAcM,EAAAA;AAAd,IAA8BT,iBAAiB,CAACU,OAAtD;AAEP,eAAeV,iBAAiB,CAACW,OAAjC","sourcesContent":["import { createSlice, applyMiddleware } from '@reduxjs/toolkit'\n\nimport ReduxThunk from 'redux-thunk';\n\n\nconst initialState={\n    userName:'',\n    passWord:'',\n    logInStatus:false\n}\n\nexport const authenticateSlide = createSlice({\n    name: 'authentication',\n    initialState,\n    reducers: {\n      getAccount: (state,action) => {\n        if(action.payload[0]!==''&&action.payload[1]!==''){\n        state.userName = action.payload[0];\n        state.passWord = action.payload[1];\n        }\n        else{\n          console.log('wrong')\n        }\n        console.log(state.userName,state.passWord)\n      },\n      checkAccount: (state,action) => {\n        if(action.payload[0]===state.userName&&action.payload[1]===state.passWord){\n            state.logInStatus=true;\n        }\n      },\n    },\n  })\n  \n  // Action creators are generated for each case reducer function\n  export const { getAccount, checkAccount} = authenticateSlide.actions\n  \n  export default authenticateSlide.reducer"]},"metadata":{},"sourceType":"module"}