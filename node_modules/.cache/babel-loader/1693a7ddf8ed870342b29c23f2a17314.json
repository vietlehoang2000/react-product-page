{"ast":null,"code":"var _jsxFileName = \"/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/pagination.js\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaginationShow({\n  category,\n  totalCount,\n  ItemsPageLimit,\n  currentPage\n}) {\n  let totalPagesNeeded = 0;\n  console.log(totalCount.Desktop);\n\n  if (category === \"Notebook\") {\n    totalPagesNeeded = Math.ceil(totalCount.Notebook / ItemsPageLimit);\n  } else {\n    totalPagesNeeded = Math.ceil(totalCount.Desktop / ItemsPageLimit);\n  }\n\n  let active = currentPage;\n  let items = [];\n\n  for (let number = 1; number <= totalPagesNeeded; number++) {\n    items.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      onClick: () => setCurrentPage(num),\n      active: number === active,\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"d-flex justify-content-center\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = PaginationShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationShow\");","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/pagination.js"],"names":["Pagination","PaginationShow","category","totalCount","ItemsPageLimit","currentPage","totalPagesNeeded","console","log","Desktop","Math","ceil","Notebook","active","items","number","push","setCurrentPage","num"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,4BAAvB;;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA,QAAD;AAAUC,EAAAA,UAAV;AAAqBC,EAAAA,cAArB;AAAoCC,EAAAA;AAApC,CAAxB,EAA0E;AACrF,MAAIC,gBAAgB,GAAC,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,CAACM,OAAvB;;AACA,MAAGP,QAAQ,KAAG,UAAd,EAAyB;AAC1BI,IAAAA,gBAAgB,GAAEI,IAAI,CAACC,IAAL,CAAUR,UAAU,CAACS,QAAX,GAAoBR,cAA9B,CAAlB;AAAiE,GADhE,MAEE;AACDE,IAAAA,gBAAgB,GAAEI,IAAI,CAACC,IAAL,CAAUR,UAAU,CAACM,OAAX,GAAmBL,cAA7B,CAAlB;AACF;;AACD,MAAIS,MAAM,GAAGR,WAAb;AACA,MAAIS,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,IAAIT,gBAA/B,EAAiDS,MAAM,EAAvD,EAA2D;AACzDD,IAAAA,KAAK,CAACE,IAAN,eACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,OAAO,EAAE,MAAIC,cAAc,CAACC,GAAD,CAA5C;AAAgE,MAAA,MAAM,EAAEH,MAAM,KAAKF,MAAnF;AAAA,gBACGE;AADH,OAAwDA,MAAxD;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBAAQ;AAAA,2BAAE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,+BAAtB;AAAA,gBAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA;AAAF,mBAAR;AACD;KAlBuBb,c","sourcesContent":["import Pagination from \"react-bootstrap/Pagination\";\n\nexport default function PaginationShow({category,totalCount,ItemsPageLimit,currentPage}) {\n    let totalPagesNeeded=0;\n    console.log(totalCount.Desktop)\n    if(category===\"Notebook\"){\n   totalPagesNeeded= Math.ceil(totalCount.Notebook/ItemsPageLimit);}\n  else{\n     totalPagesNeeded= Math.ceil(totalCount.Desktop/ItemsPageLimit)\n  }\n  let active = currentPage;\n  let items = [];\n  for (let number = 1; number <= totalPagesNeeded; number++) {\n    items.push(\n      <Pagination.Item onClick={()=>setCurrentPage(num)} key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    );\n  }\n  return (<><Pagination className=\"d-flex justify-content-center\">{items}</Pagination></>);\n}\n"]},"metadata":{},"sourceType":"module"}