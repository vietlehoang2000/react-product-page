{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAccount, checkAccount } from \"./authenticateSlide\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { InputGroup } from \"react-bootstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authenticate() {\n  _s();\n\n  const [authenStatus, setAuthenStatus] = useState(\"login\");\n  const logInStatus = useSelector(state => state.authenticate.logInStatus);\n  const userName = useSelector(state => state.authenticate.userName);\n  const passWord = useSelector(state => state.authenticate.passWord);\n  const [inputUname, setInputUname] = useState(\"\");\n  const [inputPassWord, setInputPassWord] = useState(\"\");\n  console.log(inputUname, inputPassWord);\n  console.log(logInStatus, userName, passWord);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmitRegister = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(getAccount([inputUname, inputPassWord]));\n  };\n\n  const handleSubmitLogIn = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(checkAccount([inputUname, inputPassWord]));\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Authenticate, \"Zz8lz96QZzYiWu4tmyAd0lIOd6g=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Authenticate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/authentication/Authenticate.js"],"names":["React","useState","useSelector","useDispatch","getAccount","checkAccount","Form","Button","InputGroup","Authenticate","authenStatus","setAuthenStatus","logInStatus","state","authenticate","userName","passWord","inputUname","setInputUname","inputPassWord","setInputPassWord","console","log","validated","setValidated","handleSubmitRegister","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","dispatch","handleSubmitLogIn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AACA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,OAAD,CAAhD;AAEA,QAAMW,WAAW,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,WAA/B,CAA/B;AAEA,QAAMG,QAAQ,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,QAA/B,CAA5B;AACA,QAAMC,QAAQ,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBE,QAA/B,CAA5B;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ,EAAwBE,aAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAAyBG,QAAzB,EAAmCC,QAAnC;AAEA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMwB,oBAAoB,GAAIC,KAAD,IAAW;AACtC,UAAMC,IAAI,GAAGD,KAAK,CAACE,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAClCH,MAAAA,KAAK,CAACI,cAAN;AACAJ,MAAAA,KAAK,CAACK,eAAN;AACD;;AAEDP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAQ,IAAAA,QAAQ,CAAC5B,UAAU,CAAC,CAACa,UAAD,EAAaE,aAAb,CAAD,CAAX,CAAR;AACD,GAVD;;AAYA,QAAMc,iBAAiB,GAAIP,KAAD,IAAW;AACnC,UAAMC,IAAI,GAAGD,KAAK,CAACE,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAClCH,MAAAA,KAAK,CAACI,cAAN;AACAJ,MAAAA,KAAK,CAACK,eAAN;AACD;;AAEDP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAQ,IAAAA,QAAQ,CAAC3B,YAAY,CAAC,CAACY,UAAD,EAAaE,aAAb,CAAD,CAAb,CAAR;AAED,GAXD;;AAcA,QAAMa,QAAQ,GAAG7B,WAAW,EAA5B;AAEA,sBAAQ,qCAAR;AAKD;;GAjDuBM,Y;UAGFP,W,EAEHA,W,EACAA,W,EAoCAC,W;;;KA1CKM,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAccount, checkAccount } from \"./authenticateSlide\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { InputGroup } from \"react-bootstrap\";\nexport default function Authenticate() {\n  const [authenStatus, setAuthenStatus] = useState(\"login\");\n\n  const logInStatus = useSelector((state) => state.authenticate.logInStatus);\n\n  const userName = useSelector((state) => state.authenticate.userName);\n  const passWord = useSelector((state) => state.authenticate.passWord);\n\n  const [inputUname, setInputUname] = useState(\"\");\n  const [inputPassWord, setInputPassWord] = useState(\"\");\n\n  console.log(inputUname, inputPassWord);\n  console.log(logInStatus, userName, passWord);\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmitRegister = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n\n    dispatch(getAccount([inputUname, inputPassWord]));\n  };  \n\n  const handleSubmitLogIn = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    \n    dispatch(checkAccount([inputUname, inputPassWord]));\n\n  }\n  \n\n  const dispatch = useDispatch();\n\n  return (<>\n  \n  </>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}