{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport ReduxThunk from 'redux-thunk';\nconst initialState = {\n  userName: '',\n  passWord: '',\n  logInStatus: false\n};\nexport const authenticateSlide = createSlice({\n  name: 'authentication',\n  initialState,\n  reducers: {// getAccount: (state,action) => {\n    //   if(action.payload[0]!==''&&action.payload[1]!==''){\n    //   state.userName = action.payload[0];\n    //   state.passWord = action.payload[1];\n    //   }\n    //   else{\n    //     console.log('wrong')\n    //   }\n    //   console.log(state.userName,state.passWord)\n    // },\n    // checkAccount: (state,action) => {\n    //   if(action.payload[0]===state.userName&&action.payload[1]===state.passWord){\n    //       state.logInStatus=true;\n    //   }\n    // },\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  getAccount,\n  checkAccount\n} = authenticateSlide.actions;\nexport default authenticateSlide.reducer;","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/authentication/authenticateSlide.js"],"names":["createSlice","createAsyncThunk","ReduxThunk","initialState","userName","passWord","logInStatus","authenticateSlide","name","reducers","getAccount","checkAccount","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AAGA,MAAMC,YAAY,GAAC;AACfC,EAAAA,QAAQ,EAAC,EADM;AAEfC,EAAAA,QAAQ,EAAC,EAFM;AAGfC,EAAAA,WAAW,EAAC;AAHG,CAAnB;AAMA,OAAO,MAAMC,iBAAiB,GAAGP,WAAW,CAAC;AACzCQ,EAAAA,IAAI,EAAE,gBADmC;AAEzCL,EAAAA,YAFyC;AAGzCM,EAAAA,QAAQ,EAAE,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ;AAH+B,CAAD,CAArC,C,CAsBL;;AACA,OAAO,MAAM;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAA8BJ,iBAAiB,CAACK,OAAtD;AAEP,eAAeL,iBAAiB,CAACM,OAAjC","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nimport ReduxThunk from 'redux-thunk';\n\n\nconst initialState={\n    userName:'',\n    passWord:'',\n    logInStatus:false\n}\n\nexport const authenticateSlide = createSlice({\n    name: 'authentication',\n    initialState,\n    reducers: {\n      // getAccount: (state,action) => {\n      //   if(action.payload[0]!==''&&action.payload[1]!==''){\n      //   state.userName = action.payload[0];\n      //   state.passWord = action.payload[1];\n      //   }\n      //   else{\n      //     console.log('wrong')\n      //   }\n      //   console.log(state.userName,state.passWord)\n      // },\n      // checkAccount: (state,action) => {\n      //   if(action.payload[0]===state.userName&&action.payload[1]===state.passWord){\n      //       state.logInStatus=true;\n      //   }\n      // },\n    },\n  })\n  \n  // Action creators are generated for each case reducer function\n  export const { getAccount, checkAccount} = authenticateSlide.actions\n  \n  export default authenticateSlide.reducer"]},"metadata":{},"sourceType":"module"}