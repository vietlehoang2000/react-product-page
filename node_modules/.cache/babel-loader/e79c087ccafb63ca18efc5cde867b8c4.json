{"ast":null,"code":"var _jsxFileName = \"/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/authentication/Authenticate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAccount, checkAccount } from \"./authenticateSlide\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { InputGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authenticate() {\n  _s();\n\n  const [authenStatus, setAuthenStatus] = useState(\"login\");\n  const logInStatus = useSelector(state => state.authenticate.logInStatus);\n  const userName = useSelector(state => state.authenticate.userName);\n  const passWord = useSelector(state => state.authenticate.passWord);\n  const [inputUname, setInputUname] = useState(\"\");\n  const [inputPassWord, setInputPassWord] = useState(\"\");\n  console.log(inputUname, inputPassWord);\n  console.log(logInStatus, userName, passWord);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmitRegister = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(getAccount([inputUname, inputPassWord]));\n  };\n\n  const handleSubmitLogIn = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(checkAccount([inputUname, inputPassWord]));\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAuthenStatus(\"login\"),\n        children: \"LogIn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAuthenStatus(\"register\"),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), authenStatus === \"login\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Logging in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validated,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Username\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                required: true,\n                onChange: e => setInputUname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose a username.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Password\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                required: true,\n                onChange: e => setInputPassWord(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter password.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: e => handleSubmitLogIn(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Regist your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validated,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"inputGroupPrepend\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Username\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                required: true,\n                onChange: e => setInputUname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose a username.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Password\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                required: true,\n                onChange: e => setInputPassWord(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter password.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: e => handleSubmitRegister(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Authenticate, \"Zz8lz96QZzYiWu4tmyAd0lIOd6g=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Authenticate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/authentication/Authenticate.js"],"names":["React","useState","useSelector","useDispatch","getAccount","checkAccount","Form","Button","InputGroup","Authenticate","authenStatus","setAuthenStatus","logInStatus","state","authenticate","userName","passWord","inputUname","setInputUname","inputPassWord","setInputPassWord","console","log","validated","setValidated","handleSubmitRegister","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","dispatch","handleSubmitLogIn","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAccount, checkAccount } from \"./authenticateSlide\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { InputGroup } from \"react-bootstrap\";\nexport default function Authenticate() {\n  const [authenStatus, setAuthenStatus] = useState(\"login\");\n\n  const logInStatus = useSelector((state) => state.authenticate.logInStatus);\n\n  const userName = useSelector((state) => state.authenticate.userName);\n  const passWord = useSelector((state) => state.authenticate.passWord);\n\n  const [inputUname, setInputUname] = useState(\"\");\n  const [inputPassWord, setInputPassWord] = useState(\"\");\n\n  console.log(inputUname, inputPassWord);\n  console.log(logInStatus, userName, passWord);\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmitRegister = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n\n    dispatch(getAccount([inputUname, inputPassWord]));\n  };  \n\n  const handleSubmitLogIn = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    \n    dispatch(checkAccount([inputUname, inputPassWord]));\n\n  }\n  \n\n  const dispatch = useDispatch();\n\n  return (<>\n    <div className=\"container\">\n      <button onClick={() => setAuthenStatus(\"login\")}>LogIn</button>\n      <button onClick={() => setAuthenStatus(\"register\")}>Register</button>\n      {authenStatus === \"login\" ? (\n        <>\n          <h1>Logging in </h1>\n          <Form noValidate validated={validated}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <InputGroup hasValidation>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                  onChange={(e)=>setInputUname(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\" >\n                  Please choose a username.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <InputGroup hasValidation>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Password\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                  onChange={(e)=>setInputPassWord(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\" >\n                  Please enter password.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={(e)=>handleSubmitLogIn(e)}>\n              Submit\n            </Button>\n          </Form>\n        </>\n      ) : (\n        <>\n          <h1>Regist your account</h1>\n          <Form noValidate validated={validated}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <InputGroup hasValidation>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                  onChange={(e)=>setInputUname(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\" >\n                  Please choose a username.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <InputGroup hasValidation>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Password\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                  onChange={(e)=>setInputPassWord(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\" >\n                  Please enter password.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={(e)=>handleSubmitRegister(e)}>\n              Submit\n            </Button>\n          </Form>\n        </>\n      )}\n    </div>\n  </>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}