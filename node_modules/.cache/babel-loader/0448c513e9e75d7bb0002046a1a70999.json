{"ast":null,"code":"var _jsxFileName = \"/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/LocalStorageContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useContext, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocalStorageDataContext = /*#__PURE__*/React.createContext();\nconst UpdateLocalStorageDataContext = /*#__PURE__*/React.createContext();\nconst IncreaseBagQuantityContext = /*#__PURE__*/React.createContext();\nexport function UseLocalStorageData() {\n  _s();\n\n  return useContext(LocalStorageDataContext);\n}\n\n_s(UseLocalStorageData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c = UseLocalStorageData;\nexport function UpdateLocalStorageData() {\n  _s2();\n\n  return useContext(UpdateLocalStorageDataContext);\n}\n\n_s2(UpdateLocalStorageData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = UpdateLocalStorageData;\nexport function IncreaseBagQuantity() {\n  _s3();\n\n  return useContext(IncreaseBagQuantityContext);\n}\n\n_s3(IncreaseBagQuantity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c3 = IncreaseBagQuantity;\nexport function LocalStorageDataProvider({\n  children\n}) {\n  _s4();\n\n  let data = JSON.parse(localStorage.getItem(\"data\") || \"[]\");\n  const [products, setProducts] = useState(data);\n\n  function increaseBagQuantity(product, category) {\n    let refProducts = [...products];\n    let newProduct = {};\n\n    if (refProducts.some(function (duplicateItems) {\n      return duplicateItems.id === product.id && duplicateItems.category === category;\n    })) {\n      refProducts[refProducts.findIndex(item => (item.id === product.id, item.category === category))].quantity += 1;\n    } else {\n      newProduct = {\n        id: product.id,\n        category: category,\n        name: product.name,\n        version: product.version,\n        quantity: 1,\n        imageUrl: product.image,\n        price: product.price\n      };\n      refProducts.push(newProduct);\n    }\n\n    setProducts(refProducts);\n  }\n\n  function updateLocalStorageData(value, id, category) {\n    let refProducts = [...products];\n    let changeId = refProducts.map(function (item, index) {\n      if (item.id === id && item.category === category) return index;\n    });\n    console.log(changeId);\n  }\n\n  localStorage.setItem(\"data\", JSON.stringify(products));\n  return /*#__PURE__*/_jsxDEV(LocalStorageDataContext.Provider, {\n    value: products,\n    children: /*#__PURE__*/_jsxDEV(UpdateLocalStorageDataContext.Provider, {\n      value: updateLocalStorageData,\n      children: /*#__PURE__*/_jsxDEV(IncreaseBagQuantityContext.Provider, {\n        value: increaseBagQuantity,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(LocalStorageDataProvider, \"B+vMiCmoPTe5pp4iZRnlog3F4hs=\");\n\n_c4 = LocalStorageDataProvider;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UseLocalStorageData\");\n$RefreshReg$(_c2, \"UpdateLocalStorageData\");\n$RefreshReg$(_c3, \"IncreaseBagQuantity\");\n$RefreshReg$(_c4, \"LocalStorageDataProvider\");","map":{"version":3,"sources":["/Users/vietle/Documents/Techmaster/React/B8/product-page/src/components/LocalStorageContext.js"],"names":["React","useContext","createContext","useState","LocalStorageDataContext","UpdateLocalStorageDataContext","IncreaseBagQuantityContext","UseLocalStorageData","UpdateLocalStorageData","IncreaseBagQuantity","LocalStorageDataProvider","children","data","JSON","parse","localStorage","getItem","products","setProducts","increaseBagQuantity","product","category","refProducts","newProduct","some","duplicateItems","id","findIndex","item","quantity","name","version","imageUrl","image","price","push","updateLocalStorageData","value","changeId","map","index","console","log","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\n\nconst LocalStorageDataContext = React.createContext();\n\nconst UpdateLocalStorageDataContext = React.createContext();\n\nconst IncreaseBagQuantityContext = React.createContext();\n\nexport function UseLocalStorageData() {\n  return useContext(LocalStorageDataContext);\n}\n\nexport function UpdateLocalStorageData() {\n  return useContext(UpdateLocalStorageDataContext);\n}\n\nexport function IncreaseBagQuantity() {\n  return useContext(IncreaseBagQuantityContext);\n}\n\nexport function LocalStorageDataProvider({ children }) {\n  let data = JSON.parse(localStorage.getItem(\"data\") || \"[]\");\n\n  const [products, setProducts] = useState(data);\n\n  function increaseBagQuantity(product, category) {\n    let refProducts = [...products];\n    let newProduct = {};\n    if(refProducts.some(function(duplicateItems){\n      return (duplicateItems.id ===product.id && duplicateItems.category === category)\n    })){\n      refProducts[refProducts.findIndex(item=>(item.id===product.id,item.category===category))].quantity+=1;\n    }\n    else{\n      newProduct={id:product.id,category:category,name:product.name,version:product.version,quantity:1,imageUrl:product.image,price:product.price}\n      refProducts.push(newProduct);\n    }\n    \n    setProducts(refProducts);\n  }\n\n  function updateLocalStorageData(value,id,category) {\n    let refProducts = [...products];\n    let changeId = refProducts.map(function(item,index){\n      if(item.id===id&&item.category===category)\n      return index\n    })\n    console.log(changeId)\n  }\n\n  localStorage.setItem(\"data\", JSON.stringify(products));\n\n  return (\n    <LocalStorageDataContext.Provider value={products}>\n      <UpdateLocalStorageDataContext.Provider value={updateLocalStorageData}>\n        <IncreaseBagQuantityContext.Provider value={increaseBagQuantity}>\n          {children}\n        </IncreaseBagQuantityContext.Provider>\n      </UpdateLocalStorageDataContext.Provider>\n    </LocalStorageDataContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}